---
- name: manage libvirt guests
  hosts: localhost
  user: root

  vars_files:
      - vars/guests.yml

  tasks:
      - name: start libvirtd
        service: name=libvirtd state=started enabled=yes
        register: libvirtd

      - name: wait for libvirtd to get up
        pause: seconds=30
        when: libvirtd.changed

      - name: get list of vms
        virt: command=list_vms
        register: vms_info

      - name: create base VM if none available
        command: virt-install -n {{item.name}}
                 -r {{item.mem}}
                 --vcpus {{item.cpu}}
                 --location {{basepath}}/{{item.iso}}
                 --os-type {{item.os.type}}
                 --os-variant {{item.os.variant}}
                 --network network=default
                 --initrd-inject {{basepath}}/{{item.kickstart}}
                 --extra-args="inst.ks=file:/{{item.kickstart}} inst.text"
                 --graphics spice
                 --{{item.virt_hypervisor}}
                 --virt-type {{item.virt_type}}
                 --disk size={{item.disksize}},path={{basepath}}/{{item.name}}.img
                 --noautoconsole
                 --noreboot
                 --wait -1
        when: item.name not in vms_info.list_vms
        with_items: "{{baseimgs}}"

      - name: get guest info
        virt: command=info
        register: virt_info

      - name: make sure the base vm is not running
        virt: name={{item.name}} state=shutdown
        with_items: "{{baseimgs}}"

      - include: test-guest.yml vm={{item}}
        with_items: "{{guests}}"
