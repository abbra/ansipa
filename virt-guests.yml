---
- name: manage libvirt guests
  hosts: localhost

  vars_files:
      - vars/guests.yml

  tasks:
      #- name: start libvirtd
      #  service: name=libvirtd state=started enabled=yes
      #  register: libvirtd

      #- name: wait for libvirtd to get up
      #  pause: seconds=30
      #  when: libvirtd.changed

      - name: get list of vms
        virt: command=list_vms
        register: virt_vms

      - name: create vm
        command: virt-install -n {{item.name}}
                 -r {{ item.mem }}
                 --vcpus {{ item.cpu }}
                 --location {{ item.url }}
                 --os-type {{ item.os.type }}
                 --os-variant {{ item.os.variant }}
                 --network network=default
                 --extra-args="ip={{ item.net.ip }}::{{ item.net.gateway }}:255.255.255.0:{{ item.net.name }}:eth0:none"
                 --graphics spice
                 --{{item.virt_hypervisor}}
                 --virt-type {{ item.virt_type }}
                 --disk size={{item.disk.size}},path={{item.disk.path}}/{{item.name}}.img
                 --noautoconsole
        when: item.name not in virt_vms.list_vms
        with_items: guests

      - name: get guest info
        virt: command=info
        register: virt_info

      - name: make sure all vms are running
        virt: name={{item.name}} command=start
        when: virt_info[item.name]['state'] != 'running'
        with_items: guests

